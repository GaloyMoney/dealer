version: '2.1'
networks:
  monitoring:
    driver: bridge
volumes:
    prometheus_data: {}
    grafana_data: {}
services:
  prometheus:
    image: prom/prometheus:v2.29.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    expose:
      - 9090
    environment:
      - LOGS_ENABLED=false
    networks:
      - monitoring
  grafana:
    image: grafana/grafana:8.1.1
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - LOGS_ENABLED=false
    ports:
      - 3000:3000
    expose:
      - 3000
    networks:
      - monitoring
  galoy-dealer:
    build:
      context: .
      dockerfile: src/app/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy      
    links:
      - postgres
      - graphql
    ports:
      - 3333:3333
      - 50055:50055
    expose:
      - 3333
      - 50055
    networks:
      - monitoring
    environment:
      GRAPHQL_URI: http://graphql:4000/graphql
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/galoy
  graphql:
    build:
      context: .
      dockerfile: src/servers/graphql/Dockerfile
    links:
      - postgres
    ports:
      - 4000:4000
    expose:
      - 4000
    networks:
      - monitoring
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/galoy
  postgres:
    container_name: postgres
    image: postgres:13.4
    ports:
      - "5432:5432"
    networks:
      - monitoring
    volumes: 
      - ../postgresdata:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: galoy
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
