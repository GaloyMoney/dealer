// source: services/price/v1/price_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require("google-protobuf")
var goog = jspb
var global = Function("return this")()

goog.exportSymbol(
  "proto.services.price.v1.GetImmediateUsdPriceForBuyRequest",
  null,
  global,
)
goog.exportSymbol(
  "proto.services.price.v1.GetImmediateUsdPriceForBuyResponse",
  null,
  global,
)
goog.exportSymbol(
  "proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest",
  null,
  global,
)
goog.exportSymbol(
  "proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse",
  null,
  global,
)
goog.exportSymbol(
  "proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest",
  null,
  global,
)
goog.exportSymbol(
  "proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse",
  null,
  global,
)
goog.exportSymbol(
  "proto.services.price.v1.GetImmediateUsdPriceForSellRequest",
  null,
  global,
)
goog.exportSymbol(
  "proto.services.price.v1.GetImmediateUsdPriceForSellResponse",
  null,
  global,
)
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.price.v1.GetImmediateUsdPriceForBuyRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.services.price.v1.GetImmediateUsdPriceForBuyRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.price.v1.GetImmediateUsdPriceForBuyRequest.displayName =
    "proto.services.price.v1.GetImmediateUsdPriceForBuyRequest"
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.price.v1.GetImmediateUsdPriceForSellRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.services.price.v1.GetImmediateUsdPriceForSellRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.price.v1.GetImmediateUsdPriceForSellRequest.displayName =
    "proto.services.price.v1.GetImmediateUsdPriceForSellRequest"
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(
  proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest,
  jspb.Message,
)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest.displayName =
    "proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest"
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(
  proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest,
  jspb.Message,
)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest.displayName =
    "proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest"
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.price.v1.GetImmediateUsdPriceForBuyResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.services.price.v1.GetImmediateUsdPriceForBuyResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.price.v1.GetImmediateUsdPriceForBuyResponse.displayName =
    "proto.services.price.v1.GetImmediateUsdPriceForBuyResponse"
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.price.v1.GetImmediateUsdPriceForSellResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.services.price.v1.GetImmediateUsdPriceForSellResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.price.v1.GetImmediateUsdPriceForSellResponse.displayName =
    "proto.services.price.v1.GetImmediateUsdPriceForSellResponse"
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(
  proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse,
  jspb.Message,
)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse.displayName =
    "proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse"
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(
  proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse,
  jspb.Message,
)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse.displayName =
    "proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse"
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.services.price.v1.GetImmediateUsdPriceForBuyRequest.prototype.toObject =
    function (opt_includeInstance) {
      return proto.services.price.v1.GetImmediateUsdPriceForBuyRequest.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.services.price.v1.GetImmediateUsdPriceForBuyRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.services.price.v1.GetImmediateUsdPriceForBuyRequest.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        amountInSatoshis: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForBuyRequest}
 */
proto.services.price.v1.GetImmediateUsdPriceForBuyRequest.deserializeBinary = function (
  bytes,
) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.services.price.v1.GetImmediateUsdPriceForBuyRequest()
  return proto.services.price.v1.GetImmediateUsdPriceForBuyRequest.deserializeBinaryFromReader(
    msg,
    reader,
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.price.v1.GetImmediateUsdPriceForBuyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForBuyRequest}
 */
proto.services.price.v1.GetImmediateUsdPriceForBuyRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = /** @type {number} */ (reader.readFloat())
          msg.setAmountInSatoshis(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.price.v1.GetImmediateUsdPriceForBuyRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.services.price.v1.GetImmediateUsdPriceForBuyRequest.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.price.v1.GetImmediateUsdPriceForBuyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.price.v1.GetImmediateUsdPriceForBuyRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getAmountInSatoshis()
    if (f !== 0.0) {
      writer.writeFloat(1, f)
    }
  }

/**
 * optional float amount_in_satoshis = 1;
 * @return {number}
 */
proto.services.price.v1.GetImmediateUsdPriceForBuyRequest.prototype.getAmountInSatoshis =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0)
    )
  }

/**
 * @param {number} value
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForBuyRequest} returns this
 */
proto.services.price.v1.GetImmediateUsdPriceForBuyRequest.prototype.setAmountInSatoshis =
  function (value) {
    return jspb.Message.setProto3FloatField(this, 1, value)
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.services.price.v1.GetImmediateUsdPriceForSellRequest.prototype.toObject =
    function (opt_includeInstance) {
      return proto.services.price.v1.GetImmediateUsdPriceForSellRequest.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.services.price.v1.GetImmediateUsdPriceForSellRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.services.price.v1.GetImmediateUsdPriceForSellRequest.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        amountInSatoshis: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForSellRequest}
 */
proto.services.price.v1.GetImmediateUsdPriceForSellRequest.deserializeBinary = function (
  bytes,
) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.services.price.v1.GetImmediateUsdPriceForSellRequest()
  return proto.services.price.v1.GetImmediateUsdPriceForSellRequest.deserializeBinaryFromReader(
    msg,
    reader,
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.price.v1.GetImmediateUsdPriceForSellRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForSellRequest}
 */
proto.services.price.v1.GetImmediateUsdPriceForSellRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = /** @type {number} */ (reader.readFloat())
          msg.setAmountInSatoshis(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.price.v1.GetImmediateUsdPriceForSellRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.services.price.v1.GetImmediateUsdPriceForSellRequest.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.price.v1.GetImmediateUsdPriceForSellRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.price.v1.GetImmediateUsdPriceForSellRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getAmountInSatoshis()
    if (f !== 0.0) {
      writer.writeFloat(1, f)
    }
  }

/**
 * optional float amount_in_satoshis = 1;
 * @return {number}
 */
proto.services.price.v1.GetImmediateUsdPriceForSellRequest.prototype.getAmountInSatoshis =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0)
    )
  }

/**
 * @param {number} value
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForSellRequest} returns this
 */
proto.services.price.v1.GetImmediateUsdPriceForSellRequest.prototype.setAmountInSatoshis =
  function (value) {
    return jspb.Message.setProto3FloatField(this, 1, value)
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest.prototype.toObject =
    function (opt_includeInstance) {
      return proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        amountInSatoshis: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
        timeInMinutes: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes)
    var msg = new proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest()
    return proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest.deserializeBinaryFromReader(
      msg,
      reader,
    )
  }

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = /** @type {number} */ (reader.readFloat())
          msg.setAmountInSatoshis(value)
          break
        case 2:
          var value = /** @type {number} */ (reader.readFloat())
          msg.setTimeInMinutes(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getAmountInSatoshis()
    if (f !== 0.0) {
      writer.writeFloat(1, f)
    }
    f = message.getTimeInMinutes()
    if (f !== 0.0) {
      writer.writeFloat(2, f)
    }
  }

/**
 * optional float amount_in_satoshis = 1;
 * @return {number}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest.prototype.getAmountInSatoshis =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0)
    )
  }

/**
 * @param {number} value
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest} returns this
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest.prototype.setAmountInSatoshis =
  function (value) {
    return jspb.Message.setProto3FloatField(this, 1, value)
  }

/**
 * optional float time_in_minutes = 2;
 * @return {number}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest.prototype.getTimeInMinutes =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0)
    )
  }

/**
 * @param {number} value
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest} returns this
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionBuyRequest.prototype.setTimeInMinutes =
  function (value) {
    return jspb.Message.setProto3FloatField(this, 2, value)
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest.prototype.toObject =
    function (opt_includeInstance) {
      return proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        amountInSatoshis: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
        timeInMinutes: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes)
    var msg = new proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest()
    return proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest.deserializeBinaryFromReader(
      msg,
      reader,
    )
  }

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = /** @type {number} */ (reader.readFloat())
          msg.setAmountInSatoshis(value)
          break
        case 2:
          var value = /** @type {number} */ (reader.readFloat())
          msg.setTimeInMinutes(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getAmountInSatoshis()
    if (f !== 0.0) {
      writer.writeFloat(1, f)
    }
    f = message.getTimeInMinutes()
    if (f !== 0.0) {
      writer.writeFloat(2, f)
    }
  }

/**
 * optional float amount_in_satoshis = 1;
 * @return {number}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest.prototype.getAmountInSatoshis =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0)
    )
  }

/**
 * @param {number} value
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest} returns this
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest.prototype.setAmountInSatoshis =
  function (value) {
    return jspb.Message.setProto3FloatField(this, 1, value)
  }

/**
 * optional float time_in_minutes = 2;
 * @return {number}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest.prototype.getTimeInMinutes =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0)
    )
  }

/**
 * @param {number} value
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest} returns this
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionSellRequest.prototype.setTimeInMinutes =
  function (value) {
    return jspb.Message.setProto3FloatField(this, 2, value)
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.services.price.v1.GetImmediateUsdPriceForBuyResponse.prototype.toObject =
    function (opt_includeInstance) {
      return proto.services.price.v1.GetImmediateUsdPriceForBuyResponse.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.services.price.v1.GetImmediateUsdPriceForBuyResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.services.price.v1.GetImmediateUsdPriceForBuyResponse.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        priceInUsd: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForBuyResponse}
 */
proto.services.price.v1.GetImmediateUsdPriceForBuyResponse.deserializeBinary = function (
  bytes,
) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.services.price.v1.GetImmediateUsdPriceForBuyResponse()
  return proto.services.price.v1.GetImmediateUsdPriceForBuyResponse.deserializeBinaryFromReader(
    msg,
    reader,
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.price.v1.GetImmediateUsdPriceForBuyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForBuyResponse}
 */
proto.services.price.v1.GetImmediateUsdPriceForBuyResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = /** @type {number} */ (reader.readFloat())
          msg.setPriceInUsd(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.price.v1.GetImmediateUsdPriceForBuyResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.services.price.v1.GetImmediateUsdPriceForBuyResponse.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.price.v1.GetImmediateUsdPriceForBuyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.price.v1.GetImmediateUsdPriceForBuyResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getPriceInUsd()
    if (f !== 0.0) {
      writer.writeFloat(1, f)
    }
  }

/**
 * optional float price_in_usd = 1;
 * @return {number}
 */
proto.services.price.v1.GetImmediateUsdPriceForBuyResponse.prototype.getPriceInUsd =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0)
    )
  }

/**
 * @param {number} value
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForBuyResponse} returns this
 */
proto.services.price.v1.GetImmediateUsdPriceForBuyResponse.prototype.setPriceInUsd =
  function (value) {
    return jspb.Message.setProto3FloatField(this, 1, value)
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.services.price.v1.GetImmediateUsdPriceForSellResponse.prototype.toObject =
    function (opt_includeInstance) {
      return proto.services.price.v1.GetImmediateUsdPriceForSellResponse.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.services.price.v1.GetImmediateUsdPriceForSellResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.services.price.v1.GetImmediateUsdPriceForSellResponse.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        priceInUsd: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForSellResponse}
 */
proto.services.price.v1.GetImmediateUsdPriceForSellResponse.deserializeBinary = function (
  bytes,
) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.services.price.v1.GetImmediateUsdPriceForSellResponse()
  return proto.services.price.v1.GetImmediateUsdPriceForSellResponse.deserializeBinaryFromReader(
    msg,
    reader,
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.price.v1.GetImmediateUsdPriceForSellResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForSellResponse}
 */
proto.services.price.v1.GetImmediateUsdPriceForSellResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = /** @type {number} */ (reader.readFloat())
          msg.setPriceInUsd(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.price.v1.GetImmediateUsdPriceForSellResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.services.price.v1.GetImmediateUsdPriceForSellResponse.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.price.v1.GetImmediateUsdPriceForSellResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.price.v1.GetImmediateUsdPriceForSellResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getPriceInUsd()
    if (f !== 0.0) {
      writer.writeFloat(1, f)
    }
  }

/**
 * optional float price_in_usd = 1;
 * @return {number}
 */
proto.services.price.v1.GetImmediateUsdPriceForSellResponse.prototype.getPriceInUsd =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0)
    )
  }

/**
 * @param {number} value
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForSellResponse} returns this
 */
proto.services.price.v1.GetImmediateUsdPriceForSellResponse.prototype.setPriceInUsd =
  function (value) {
    return jspb.Message.setProto3FloatField(this, 1, value)
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse.prototype.toObject =
    function (opt_includeInstance) {
      return proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        priceInUsd: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes)
    var msg = new proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse()
    return proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse.deserializeBinaryFromReader(
      msg,
      reader,
    )
  }

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = /** @type {number} */ (reader.readFloat())
          msg.setPriceInUsd(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getPriceInUsd()
    if (f !== 0.0) {
      writer.writeFloat(1, f)
    }
  }

/**
 * optional float price_in_usd = 1;
 * @return {number}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse.prototype.getPriceInUsd =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0)
    )
  }

/**
 * @param {number} value
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse} returns this
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionBuyResponse.prototype.setPriceInUsd =
  function (value) {
    return jspb.Message.setProto3FloatField(this, 1, value)
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse.prototype.toObject =
    function (opt_includeInstance) {
      return proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse.toObject(
        opt_includeInstance,
        this,
      )
    }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse.toObject = function (
    includeInstance,
    msg,
  ) {
    var f,
      obj = {
        priceInUsd: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes)
    var msg = new proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse()
    return proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse.deserializeBinaryFromReader(
      msg,
      reader,
    )
  }

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break
      }
      var field = reader.getFieldNumber()
      switch (field) {
        case 1:
          var value = /** @type {number} */ (reader.readFloat())
          msg.setPriceInUsd(value)
          break
        default:
          reader.skipField()
          break
      }
    }
    return msg
  }

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter()
    proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse.serializeBinaryToWriter(
      this,
      writer,
    )
    return writer.getResultBuffer()
  }

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined
    f = message.getPriceInUsd()
    if (f !== 0.0) {
      writer.writeFloat(1, f)
    }
  }

/**
 * optional float price_in_usd = 1;
 * @return {number}
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse.prototype.getPriceInUsd =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0)
    )
  }

/**
 * @param {number} value
 * @return {!proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse} returns this
 */
proto.services.price.v1.GetImmediateUsdPriceForOptionSellResponse.prototype.setPriceInUsd =
  function (value) {
    return jspb.Message.setProto3FloatField(this, 1, value)
  }

goog.object.extend(exports, proto.services.price.v1)
